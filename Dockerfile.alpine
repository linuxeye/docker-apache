# vi: ft=dockerfile
FROM httpd:2.4-alpine

###
### Build arguments
###
ENV RUN_DEPS \
	bash \
	openssl \
	shadow \
	tzdata


### Install required packages
###
RUN set -eux \
	&& apk add --no-cache \
	${RUN_DEPS}


###
### Configure Apache
###
RUN set -eux \
	&& APACHE_VERSION="$( httpd -V | grep -Eo 'Apache/[.0-9]+' | awk -F'/' '{print $2}' )" \
	&& ( \
	echo "ServerName localhost"; \
	\
	echo "LoadModule http2_module modules/mod_http2.so"; \
	echo "LoadModule proxy_module modules/mod_proxy.so"; \
	echo "LoadModule proxy_http_module modules/mod_proxy_http.so"; \
	echo "LoadModule proxy_http2_module modules/mod_proxy_http2.so"; \
	echo "LoadModule proxy_html_module modules/mod_proxy_html.so"; \
	# [proxy_html] I18n support in mod_proxy_html requires mod_xml2enc.
	echo "LoadModule xml2enc_module modules/mod_xml2enc.so"; \
	echo "LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so"; \
	echo "LoadModule rewrite_module modules/mod_rewrite.so"; \
	echo "LoadModule deflate_module modules/mod_deflate.so"; \
	echo "LoadModule expires_module modules/mod_expires.so"; \
	\
	echo "Include conf/extra/httpd-default.conf"; \
	echo "IncludeOptional /etc/httpd/custom.d/*.conf"; \
	echo "IncludeOptional /etc/httpd/conf.d/*.conf"; \
	echo "IncludeOptional /etc/httpd/vhost.d/*.conf"; \
	\
	echo "LoadModule ssl_module modules/mod_ssl.so"; \
	echo "LoadModule socache_shmcb_module modules/mod_socache_shmcb.so" ;\
	echo "Listen 443"; \
	echo "SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES"; \
	echo "SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES"; \
	echo "SSLHonorCipherOrder on"; \
	echo "SSLProtocol all -SSLv3"; \
	echo "SSLProxyProtocol all -SSLv3"; \
	echo "SSLPassPhraseDialog  builtin"; \
	echo "SSLSessionCache        \"shmcb:/usr/local/apache2/logs/ssl_scache(512000)\""; \
	echo "SSLSessionCacheTimeout  300"; \
	\
	echo "<If \"%{THE_REQUEST} =~ m#^.*HTTP/1\.0\$#\">"; \
	echo "    Header always set Via \"1.0 %{HOSTNAME}e (apache/${APACHE_VERSION})\""; \
	echo "</If>"; \
	echo "<If \"%{THE_REQUEST} =~ m#^.*HTTP/1\.1\$#\">"; \
	echo "    Header always set Via \"1.1 %{HOSTNAME}e (apache/${APACHE_VERSION})\""; \
	echo "</If>"; \
	echo "<If \"%{THE_REQUEST} =~ m#^.*HTTP/2\.0\$#\">"; \
	echo "    Header always set Via \"2.0 %{HOSTNAME}e (apache/${APACHE_VERSION})\""; \
	echo "</If>"; \
	\
	echo "HTTPProtocolOptions unsafe"; \
	\
	echo "Mutex sem"; \
	\
	echo "<IfModule mod_headers.c>"; \
	echo "  AddOutputFilterByType DEFLATE text/html text/plain text/css text/xml text/javascript"; \
	echo "  <FilesMatch \"\\.(js|css|html|htm|png|jpg|swf|pdf|shtml|xml|flv|gif|ico|jpeg)\\$\">"; \
	echo "    RequestHeader edit \"If-None-Match\" \"^(.*)-gzip(.*)\$\" \"\$1\$2\""; \
	echo "    Header edit \"ETag\" \"^(.*)-gzip(.*)\$\" \"\$1\$2\""; \
	echo "  </FilesMatch>"; \
	echo "  DeflateCompressionLevel 6"; \
	echo "  SetOutputFilter DEFLATE"; \
	echo "</IfModule>"; \
	\
	echo "ProtocolsHonorOrder On"; \
	echo "PidFile /var/run/httpd.pid"; \
	echo "ServerTokens ProductOnly"; \
	echo "ServerSignature Off"; \
	\
	) >> /usr/local/apache2/conf/httpd.conf


###
### Runtime arguments
###
ENV MY_USER=www-data
ENV MY_GROUP=www-data
ENV HTTPD_VERSION="httpd -V 2>&1 | head -1 | awk '{print \$3}'"


###
### Create directories
###
RUN set -eux \
	&& mkdir -p /etc/httpd/custom.d \
	&& mkdir -p /etc/httpd/conf.d \
	&& mkdir -p /etc/httpd/vhost.d \
	&& mkdir -p /var/www/default \
	&& mkdir -p /var/log/httpd


###
### Set timezone
###
RUN set -eux \
	&& if [ -f /etc/localtime ]; then rm /etc/localtime; fi \
	&& ln -s /usr/share/zoneinfo/UTC /etc/localtime


###
### Copy files
###
COPY ./data/docker-entrypoint.d /docker-entrypoint.d
COPY ./data/docker-entrypoint.sh /docker-entrypoint.sh


###
### Ports
###
EXPOSE 80
EXPOSE 443


###
### Signals
###
STOPSIGNAL SIGTERM


###
### Entrypoint
###
ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["httpd-foreground"]